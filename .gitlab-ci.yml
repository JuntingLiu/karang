# Cache modules in between jobs
# cache:
#   key: ${CI_COMMIT_REF_SLUG}
#   paths:
#   - node_modules/
stages:
  - test
  - version
  - publish

test:
  image: node:10-alpine
  stage: test
  tags:
    - k8s
  coverage: '/All files[^|]*\|[^|]*\s+([\d\.]+)/'
  script:
    - yarn install --pure-lockfile --network-concurrency 1
    - yarn test-coverage

version:
  image: node:10-alpine
  stage: version
  only:
    refs:
      - master@lalamove/lalamove-ui
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /DOC:/
  script:
     - apk update
     - apk -v --update add git openssh
     - mkdir ~/.ssh
     - printf '%s\n' "$SSH_KEY" > ~/.ssh/id_rsa
     - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
     - chmod 600 -R ~/.ssh
     - REMOTE_URL=`git remote get-url --push origin`
     - REMOTE_URL=${REMOTE_URL//*"@git.easygroup.co"/"ssh://git@git.easygroup.co:12888"}
     - git config user.email "$GITLAB_USER_EMAIL"
     - git config user.name "$GITLAB_USER_NAME"
     - case "$CI_COMMIT_TITLE" in "MAJOR:"*) npm version major;; "MINOR:"*) npm version minor;; *) npm version patch;; esac
     - git push $REMOTE_URL HEAD:$CI_COMMIT_REF_NAME --follow-tags
     - echo "Version updated"

publish:
  image: node:10-alpine
  stage: publish
  tags:
    - k8s
  only:
    refs:
      - master@lalamove/karang
    variables:
      - $CI_COMMIT_MESSAGE =~ /DOC:/
  script:
    - yarn install --pure-lockfile --network-concurrency 1
    - npm config set //registry.npmjs.org/:_authToken=$NPM_TOKEN
    - npm publish --access public
    - echo "Publish completed"

storybook:
  image: node:10-alpine
  stage: publish
  tags:
    - k8s
  only:
    refs:
      - master@lalamove/karang
    variables:
      - $CI_COMMIT_MESSAGE =~ /DOC:/
  environment:
    name: storybook
    url: https://ui.lalamove.com/storybook
  script:
    - apk -v --update add python py-pip
    - pip install awscli --upgrade
    - yarn install --pure-lockfile --network-concurrency 1
    - yarn storybook:build
    - AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY aws s3 cp .out $S3_URL/storybook --recursive
    - AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY aws s3 ls $S3_URL/storybook --recursive
    - echo "Upload completed"

styleguide:
  image: node:10-alpine
  stage: publish
  tags:
    - k8s
  only:
    refs:
      - master@lalamove/karang
    variables:
      - $CI_COMMIT_MESSAGE =~ /DOC:/
  environment:
    name: doc
    url: https://ui.lalamove.com
  script:
    - apk -v --update add python py-pip
    - pip install awscli --upgrade
    - yarn install --pure-lockfile --network-concurrency 1
    - yarn doc:build
    - AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY aws s3 cp styleguide $S3_URL --recursive
    - AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY aws s3 ls $S3_URL --recursive
    - echo "Upload completed"
